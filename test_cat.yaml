config:
  target: "http://149.28.154.143:8080"
  phases:
    - duration: 20
      arrivalRate: 50 # Number of users arriving per second
      name: Spike phase
  processor: "./processor.js" # Include custom JS logic for handling token and WebSocket URL

scenarios:
  - name: "Websocket Test"
    flow:
      - function: "assignUserId"
      - post:
          url: "http://149.28.154.143:5000/api/v1/login"
          json:
            username: "user.test.01"
            password: "pass1234"
          capture:
            - json: "$.data.token" # Capture the token from the login response
              as: "tokenClientApp"

      - post:
          url: "http://149.28.154.143:5000/api/v1/candidate"
          headers:
            Authorization: "Bearer {{ tokenClientApp }}"
          json:
            cnd_name: "test altillery {{ userId }}"
            last_name: "14-10"
            email: "asd@asd.com"
            position: "asd"
            gender: "male"
            language: "indonesia"
            organization: "asd"
            start_login: "2024-10-11 00:00:00.000"
            expire_login: "2024-10-31 00:00:00.000"
            self_capture: "0"
            proctoring: "0"
            assessment_center: "0"
            olinterview: "0"
            id_battery: 12
            id_cnd_group: 0
            id_welcome_page: 0
            id_biodata_template: 0
            education_degree: []
            education_university_name: []
            education_university_status: []
            education_major: []
            job_function_id: []
            job_level_id: []
          capture:
            - json: "$.data.username" # Capture the token from the login response
              as: "username"
            - json: "$.data.password" # Capture the token from the login response
              as: "password"

      - post:
          url: "/login"
          json:
            username: "{{ username }}"
            password: "{{ password }}"
          capture:
            - json: "$.data.token" # Capture the token from the login response
              as: "tokenOnlineTest"

      - get:
          url: "/ws_host" # Use JWT to hit the API and get the WebSocket URL
          headers:
            Authorization: "Bearer {{ tokenOnlineTest }}"
          capture:
            - json: "$.data.selected_host" # Capture WebSocket URL from the response
              as: "wsUrl"

      - function: "connectToWebSocket" # Call custom JS function to handle WebSocket connection

      - loop:
          - post:
              url: "http://{{ wsUrl }}/test"
              json:
                connection_id: "{{ connId }}"
                question: "6612564665543818482403435750349017663609926499163346576220149801451912389185926873398365303938872643264299514335850456900777158598693402496866943402835041634570224118066330404568236483221494076492917098844866249914290879929866424562331479470484929530479810719807501771770875381443562635226273495975672560926728096272201852685738840375462331499410484257218860173970024937710385978949352294638874287215930948390792479864689759029679908713843203529304159229725861615620844360767246237414423131395252382541214722436789521357506910806784385239131212667915286065697223577192349536631069819291852420161751071280762096700317526464632909287656212295184214611991694189593171893703770962230390480751978487698398585948551435467580934582016303889554914731649031611902973368535645741909205082336233397713399375892739362196688036541411080980862571111620497249470860494146838137541220271880030757276143464395289644876909915866493212206250053550400385293673376701537468360960764657913786708380781323834871961191069325529433971642507566125646655438184824034357503490176636099264991633465762201498014519123891859268733983653039388726432642995143358504569007771585986934024968669434028350416345702241180663304045682364832214940764929170988448662499142908799298664245623314794704849295304798107198075017717708753814435626352262734959756725609267280962722018526857388403754623314994104842572188601739700249377103859789493522946388742872159309483907924798646897590296799087138432035293041592297258616156208443607672462374144231313952523825412147224367895213575069108067843852391312126679152860656972235771923495366310698192918524201617510712807620967003175264646329092876562122951842146119916941895931718937037709622303904807519784876983985859485514354675809345820163038895549147316490316119029733685356457419092050823362333977133993758927393621966880365414110809808625711116204972494708604941468381375412202718800307572761434643952896448769099158664932122062500535504003852936733767015374683609607646579137867083807813238348719611910693255294339716425075"
                choice: "6612564665543818482403435750349017663609926499163346576220149801451912389185926873398365303938872643264299514335850456900777158598693402496866943402835041634570224118066330404568236483221494076492917098844866249914290879929866424562331479470484929530479810719807501771770875381443562635226273495975672560926728096272201852685738840375462331499410484257218860173970024937710385978949352294638874287215930948390792479864689759029679908713843203529304159229725861615620844360767246237414423131395252382541214722436789521357506910806784385239131212667915286065697223577192349536631069819291852420161751071280762096700317526464632909287656212295184214611991694189593171893703770962230390480751978487698398585948551435467580934582016303889554914731649031611902973368535645741909205082336233397713399375892739362196688036541411080980862571111620497249470860494146838137541220271880030757276143464395289644876909915866493212206250053550400385293673376701537468360960764657913786708380781323834871961191069325529433971642507566125646655438184824034357503490176636099264991633465762201498014519123891859268733983653039388726432642995143358504569007771585986934024968669434028350416345702241180663304045682364832214940764929170988448662499142908799298664245623314794704849295304798107198075017717708753814435626352262734959756725609267280962722018526857388403754623314994104842572188601739700249377103859789493522946388742872159309483907924798646897590296799087138432035293041592297258616156208443607672462374144231313952523825412147224367895213575069108067843852391312126679152860656972235771923495366310698192918524201617510712807620967003175264646329092876562122951842146119916941895931718937037709622303904807519784876983985859485514354675809345820163038895549147316490316119029733685356457419092050823362333977133993758927393621966880365414110809808625711116204972494708604941468381375412202718800307572761434643952896448769099158664932122062500535504003852936733767015374683609607646579137867083807813238348719611910693255294339716425075"
                cat_status: 1
                message: "6612564665543818482403435750349017663609926499163346576220149801451912389185926873398365303938872643264299514335850456900777158598693402496866943402835041634570224118066330404568236483221494076492917098844866249914290879929866424562331479470484929530479810719807501771770875381443562635226273495975672560926728096272201852685738840375462331499410484257218860173970024937710385978949352294638874287215930948390792479864689759029679908713843203529304159229725861615620844360767246237414423131395252382541214722436789521357506910806784385239131212667915286065697223577192349536631069819291852420161751071280762096700317526464632909287656212295184214611991694189593171893703770962230390480751978487698398585948551435467580934582016303889554914731649031611902973368535645741909205082336233397713399375892739362196688036541411080980862571111620497249470860494146838137541220271880030757276143464395289644876909915866493212206250053550400385293673376701537468360960764657913786708380781323834871961191069325529433971642507566125646655438184824034357503490176636099264991633465762201498014519123891859268733983653039388726432642995143358504569007771585986934024968669434028350416345702241180663304045682364832214940764929170988448662499142908799298664245623314794704849295304798107198075017717708753814435626352262734959756725609267280962722018526857388403754623314994104842572188601739700249377103859789493522946388742872159309483907924798646897590296799087138432035293041592297258616156208443607672462374144231313952523825412147224367895213575069108067843852391312126679152860656972235771923495366310698192918524201617510712807620967003175264646329092876562122951842146119916941895931718937037709622303904807519784876983985859485514354675809345820163038895549147316490316119029733685356457419092050823362333977133993758927393621966880365414110809808625711116204972494708604941468381375412202718800307572761434643952896448769099158664932122062500535504003852936733767015374683609607646579137867083807813238348719611910693255294339716425075"
        count: 10

      - think: 10
